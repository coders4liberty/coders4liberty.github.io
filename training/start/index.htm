
<html>
<head>
<link rel="stylesheet" type="text/css" href="../default.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  </head>
  
  <body>
  <div class="container-fluid">
  <!-- menu -->
 <div class="row bord">
   <div class="col-sm-1 bord"></div>
   <div class="col-sm-11 bord">


   
   <a href="../../#about" class="btn">About</a>
   
    <a href="../../#projects" class="btn">Projects</a>
     
    <a href="../../#social" class="btn">Social</a>
     
    <a href="../../training" class="btn">Training</a>
   
    <a href="../../links" class="btn">Links</a>
      
   </div>
   

 </div>
 
  <div id="Main">
    <div class="row main">
      <div class="col-md-1"></div>
      <div class="col-md-10 main">
 
       <h4>1.1 Introduction</h4>
<a href="http://scratch.mit.edu/projects/111468042/">http://scratch.mit.edu/projects/111468042/</a>

Liberty and programming take imagination. It requires a leap of faith to imagine a world with more liberty or write your first program. However, both experiences are an act of discovery. Many people will help you along the way, but it is your journey.

Everyone can code. We welcome all levels of skill to our ranks. You do not need to be an expert programmer to be involved. I myself am not an expert coder.

We are dedicated to matching the talent in the liberty movement to the needs of the community in computing outreach and mentorship. Our goal is to provide guidance to beginning programmers and support coding clubs and events, and hold our own where the need exists.

View our <a href="http://scratch.mit.edu/projects/embed/111468042/">Introductory Presentation on Scratch</a>. You can use this to introduce Coders for Liberty in meetings as well.
<h4>1.2 Getting Started</h4>
Not sure where to start? Here's a few ways to help Coders for Liberty grow.
<ul>
	<li>Like us on <a href="http://facebook.com/codersforliberty">Facebook</a>.</li>
	<li>Join our <a href="https://gitter.im/punkbass/Coders4Liberty" target="_blank" rel="noopener noreferrer">Gitter</a> channel.</li>
	<li>Explore the site and learn more about <a href="https://code4liberty.wordpress.com/learn-code/">coding</a> and <a href="https://code4liberty.wordpress.com/learn-liberty/">liberty</a>.</li>
	<li>Follow us on <a href="https://scratch.mit.edu/studios/2085103/">Scratch</a>.</li>
	<li>Join the <a href="http://facebook.com/groups/code4liberty">Facebook group</a>.</li>
	<li><a href="http://goo.gl/forms/bkZvC8QloHtE8O8X2" target="_blank" rel="noopener noreferrer">Join Coders for Liberty.</a></li>
	<li>Get on the <a href="https://code4liberty.wordpress.com/">map</a>. When you join, select what items you want on the map.</li>
	<li>Look for <a href="https://code4liberty.wordpress.com/map/">local groups</a> and <a href="https://code4liberty.wordpress.com/calendar/">events</a> to support.</li>
	<li>If there is no local group, create your own local group on Facebook or on a coding website.</li>
	<li>Get your local group on the <a href="https://code4liberty.wordpress.com/">map</a>.</li>
	<li>Schedule an event and mark it on the <a href="https://code4liberty.wordpress.com/calendar/">calendar</a>.</li>
	<li>Print and distribute <a href="https://docs.google.com/presentation/d/146Lu1BMVB2TPEKyis5qu1fPIpZ9T0qy9ND9VE7V_Guo/edit?usp=sharing">brochures</a>.</li>
	<li>Get involved. Advocate. Volunteer.</li>
</ul>
<h4>1.3 Events</h4>
When you hold events, ask everyone to sit near the front and sit close together.  This makes it easier for them to work together. It also makes for better pictures.

Start with an icebreaker to help everyone get to know each other. Encourage them to ask each other first and then ask your facilitators. Nothing reinforces what you learn more than teaching someone else.

Take lots of pictures. For examples of how to take pictures, check out Judd Weiss's Facebook <a href="https://www.facebook.com/juddweiss/media_set?set=a.10153895364350763.1073742036.544700762&type=3" target="_blank" rel="noopener noreferrer">albums</a>. Make the room look full. Capture people being engaged and having fun.

If you want to make a video, you can remix our <a href="https://scratch.mit.edu/projects/115465541/" target="_blank" rel="noopener noreferrer">Scratch</a> project with your photos, music, and slogans. Press Space bar (to clear screen). Then go to file "Record & Export Video" and hit the green flag.  (Just don't hit Space bar while recording)
<h4>1.4 Growth Mindset</h4>
One thing you will learn in your programming career, it sometimes pays to be lazy.While we don't encourage plagiarism, we encourage collaboration and learning from others. Much of the code you will write to some extent builds on the work of other people. So with that being said, we're going to start referring you to check out materials offered by other people.
<h5>1.4.1 Be Different</h5>
Read though some of our <a href="https://code4liberty.wordpress.com/category/coding/" target="_blank" rel="noopener noreferrer">blog posts</a> about changing your mindset and focusing on success.
<h5>1.4.2 With Math I Can</h5>
While mathematics is the foundation for computer science, a growth mindset is applicable to all disciplines. We strongly suggest checking out the resources at <a href="http://withmathican.com" target="_blank" rel="noopener noreferrer">withmathican.com</a> and taking the growth mindset pledge.
<h5>1.4.3 Successful Programmer Mindset</h5>
 

Now honestly, I would not recommend watching this entire <a href="https://youtu.be/PKL0sjgz3hA?list=PLjwWT1Xy3c4XRTEK79UXmtkUT-jsP4rUP" target="_blank" rel="noopener noreferrer">playlist</a> right now. Watch a couple you find interesting. Maybe watch it when you get into a slump in the future and need a pep talk.
<h4></h4>
<h4>1.5 Bruner's Theory of Learning</h4>
While Bruner's Theory of Learning is similar to Piaget's Stages of Development, Bruner refutes the concept of readiness in Piaget's theory. Instead Bruner argues that children can learn complex concepts at an early age if they are presented in a way that is more concrete and manipulative. Then children can move to image based representation and symbolic representation. Learners learn best when they go through these stages, enactive, iconic, and symbolic, even later in life.

What this means for coding education is that beginner coders can benefit from starting with a manipulative coding environment such as the drag and drop Blockly languages used by Scratch and Code.org. However, it is just as important to ween coders off these languages as they master the basics of computer logic.
<h4>1.6 PseudoCode</h4>
<span style="font-weight: 400;">Before you can code, you have to imagine. You have picture it. What will it do? What will it look like? What steps will it take to make it work? Break it into steps. Then break it into substeps. Then break those substeps into subsubsteps. Just kidding, the libraries handle the subsubsteps. However, you will want to write you own functions as well. So you may be writing some subsubsteps yourself. Actually, I read that you should concentrate on the big picture and the major steps with the pseudocode.
</span>

<span style="font-weight: 400;">One of the best examples of multidisciplinary teaching I ever saw was when my computer science instructor saw the writing process and explained how it applies to coding. First you write an outline, which is the psuedocode. Then you write. Then you rewrite, which is debugging. In both writing and programming, the last step is usually where you do the most work. Doing a good job on the outline really helps avoid major design flaws. It is better to have a good design than try to fix a poorly designed program with a myriad of patches.</span>

Think of how you would do it. Then think about how a computer would do it. Then think about how you would explain it to a two-year-old.

Get out a piece of paper. Think of a mundane task you do everyday. Now write out the steps and explain it to someone who never did it before.
<h4>1.7 Hour of Code</h4>
Let's start with an hour of code, just a mere 60 minutes. You can take your pick.
<h5>Do you want something fun and not too terribly difficult?</h5>
Try the <a href="http://hourofcode.com/foos" target="_blank" rel="noopener noreferrer">Foos</a>. If you like platform games and Mario Maker, keep playing it. It gets really fun when you unlock the game design.

Or try <a href="https://code.org/learn" target="_blank" rel="noopener noreferrer">code.org</a> and play with some popular characters.
<h5>Or do you want something a bit more free and less instructive?</h5>
Try <a href="https://scratch.mit.edu/hoc" target="_blank" rel="noopener noreferrer">Scratch</a>
<h5>Or do you want to skip all that kiddie stuff and start learning a programming language?</h5>
I'd say start with <a href="https://www.codecademy.com/learn/python" target="_blank" rel="noopener noreferrer">Python</a>

But you can also start with JavaScript at <a href="https://www.codecademy.com/hour-of-code" target="_blank" rel="noopener noreferrer">Codecademy </a> or <a href="https://www.codecademy.com/hour-of-code" target="_blank" rel="noopener noreferrer">Khan Academy</a>. I'm not sure why Codecademy uses JavaScript instead of Python for their hour of code. Maybe I am wrongfully biased toward Python.

You can do either one on <a href="http://hourofcode.com/cc" target="_blank" rel="noopener noreferrer">CodeCombat</a>, if you're into RPGs.
<h4>1.8 Where to Next</h4>
Again, I am not an expert coder. The training modules that follow are based on my experience and what I felt was the most helpful in developing my understanding of programming processes and enjoyment of coding. I personally believe that programming should begin with manipulative drag and drop environments such as Scratch or Code.org. Learning Scratch is more important if you want to run a coding club or assist a coding club.

However, if you are interested in <a href="https://code4liberty.wordpress.com/web/">Web</a> or <a href="https://code4liberty.wordpress.com/android/">Mobile</a> development and want to focus on those goals, you may want to skip ahead to those sections and check out <a href="http://freecodecamp.com">FreeCodeCamp</a> and other resources that offer job skills.

Regardless, the most important coding skill is collaboration, and that is also an important consideration in these training modules. We pick the most collaborative online environment we can for each step of the training modules.
<h4>1.9 A Job Well-Done</h4>
When you complete a level of training, you will be awarded a <a href="http://twibbon.com/Support/coders-for-liberty-training" target="_blank" rel="noopener noreferrer">Twibbon</a> badge. This will let other Coders who see you on social media know how far you are in the training. That way they will know who to go to to ask questions. Please wear it as a badge of honor. However, please do not just go to the last training and just download the Twibbon badge, that will defeat the whole purpose of the Twibbon badge.

 

<a href="http://twibbon.com/Support/coders-for-liberty-training" target="_blank" rel="noopener noreferrer">Congratulations you have completed the level 1 training!</a>

<a href="https://code4liberty.wordpress.com/scratch/">Onward to level 2!</a> 

        <div class="col-md-1 main"></div>
      </div></div>
    
  
 
  
  </body>
